union NetworkGroup = Network | DvPortGroup | DvSwitch

type Folder {
  id: ID!
  kind: String!
  name: String!
  parent: String!
  children: [Folder!]!
}

type VsphereProvider {
  id: ID!
  kind: String!
  name: String!
  datacenters: [VsphereDatacenter!]!
}

type VsphereDatacenter {
  id: ID!
  kind: String!
  name: String!
  provider: String!
  clusters: [VsphereCluster!]!
}

type VsphereCluster {
  id: ID!
  provider: String!
  kind: String!
  name: String!
  hosts: [VsphereHost!]!
  dasEnabled: Boolean!
  dasVms: [String!]!
  drsEnabled: Boolean!
  drsBehavior: String!
  drsVms: [String]!
}

type VsphereHost {
  id: ID!
  provider: String!
  kind: String!
  name: String!
  productName: String!
  productVersion: String!
  inMaintenance: Boolean!
  cpuSockets: Int!
  cpuCores: Int!
  vms: [VsphereVM!]!
  datastores: [String!]!
}

type VsphereDatastore {
  id: ID!
  provider: String!
  kind: String!
  name: String!
  capacity: Int!
  free: Int!
  maintenance: String!
  hosts: [VsphereHost!]!
  vms: [VsphereVM!]!
}

type Network {
  id: ID!
  kind: String!
  name: String!
  parent: Folder!
  tag: String!
  vms: [VsphereVM!]!
}

type DvPortGroup {
  id: ID!
  kind: String!
  name: String!
  parent: Folder!
  dvSwitch: ID!
  ports: [String!]!
  vms: [VsphereVM!]!
}

type DvSwitch {
  id: ID!
  kind: String!
  name: String!
  parent: Folder!
  portgroups: [DvPortGroup!]!
  host: [DvSHost]! 
}

type DvSHost {
	host: String!
	PNIC: [String!]!
}

type VsphereVM {
  id: ID!
  kind: String!
  name: String!
  path: String!
  revision: Int!
  selfLink: String!
  uuid: String!
  firmware: String!
  powerState: String!
  cpuHotAddEnabled: Boolean!
  cpuHotRemoveEnabled: Boolean!
  memoryHotAddEnabled: Boolean!
  faultToleranceEnabled: Boolean!
  cpuCount: Int!
  coresPerSocket: Int!
  memoryMB: Int!
  guestName: String!
  balloonedMemory: Int!
  ipAddress: String!
  storageUsed: Int!
  numaNodeAffinity: [String!]
  devices: [Device]
  cpuAffinity: [Int!]!
  host(id: String!): String!
  revisionAnalyzed: Int!
  disks: [Disk!]!
  concerns: [Concern!]!
}

type Device {
  Kind: String!
}

type Disk {
  kind: String!
  key: Int!
  file: String!
  datastore: String!
  capacity: Int!
  shared: Boolean!
  rdm: Boolean!
}

type Concern {
  label: String!
  category: String!
  assessment: String!
}

type Query {
  vsphereProviders: [VsphereProvider!]!
  vsphereProvider(id: ID!): VsphereProvider!
  vsphereDatacenters(provider: ID!): [VsphereDatacenter!]!
  vsphereDatacenter(id: ID!, provider: ID!): VsphereDatacenter!
  vsphereClusters(provider: ID!): [VsphereCluster!]!
  vsphereCluster(id: ID!, provider: ID!): VsphereCluster!
  vsphereHosts(provider: ID!): [VsphereHost!]!
  vsphereHost(id: ID!, provider: ID!): VsphereHost!
  vsphereDatastore(id: ID!, provider: ID!): VsphereDatastore!
  vsphereDatastores(provider: ID!): [VsphereDatastore!]!
  vsphereNetwork(id: ID!, provider: ID!): NetworkGroup!
  vsphereNetworks(provider: ID!): [NetworkGroup!]!
  vsphereVMs(provider: ID!): [VsphereVM!]!
  vsphereVM(id: ID!, provider: ID!): VsphereVM!
}

