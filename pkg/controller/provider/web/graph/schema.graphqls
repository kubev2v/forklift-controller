union NetworkGroup = Network | DvPortGroup | DvSwitch
union VsphereVMGroup = VsphereFolder | VsphereVM
union VsphereFolderGroup =
      VsphereFolder
    | VsphereDatacenter
    | VsphereCluster
    | VsphereDatastore
    | Network
    | DvPortGroup
    | DvSwitch
    | VsphereVM

type VsphereFolder {
  id: ID!
  provider: ID!
  name: String!
  parent: ID!
  childrenIDs: [ID!]!
  children: [VsphereFolderGroup!]!
}

type Provider {
  id: ID!
  name: String!
  type: String!
  product: String!
  datacenters: [VsphereDatacenter!]!
}

type VsphereDatacenter {
  id: ID!
  provider: ID!
  name: String!
  clustersID: ID!
  clusters: [VsphereCluster!]!
  datastoresID: ID!
  datastores: [VsphereDatastore!]!
  networksID: ID!
  networks: [NetworkGroup!]!
  vmsID: ID!
  vms: [VsphereVMGroup!]!
}

type VsphereCluster {
  id: ID!
  provider: ID!
  name: String!
  datastoresIDs: [ID!]!
  datastores: [VsphereDatastore!]!
  networksIDs: [ID!]!
  networks: [NetworkGroup!]!
  hosts: [VsphereHost!]!
  dasEnabled: Boolean!
  dasVmsIDs: [ID!]!
  dasVms: [VsphereVM!]!
  drsEnabled: Boolean!
  drsBehavior: String!
  drsVmsIDs: [ID!]!
  drsVms: [VsphereVM!]!
}

type VsphereHost {
  id: ID!
  provider: ID!
  name: String!
  cluster: ID!
  productName: String!
  productVersion: String!
  inMaintenance: Boolean!
  cpuSockets: Int!
  cpuCores: Int!
  vms: [VsphereVM!]!
  datastoreIDs: [ID!]!
  datastores: [VsphereDatastore!]!
  networking: ConfigNetwork!
  networksIDs: [ID!]!
  networks: [NetworkGroup!]!
  networkAdapters: [NetworkAdapter!]!
}

type VsphereDatastore {
  id: ID!
  provider: ID!
  name: String!
  capacity: Int!
  free: Int!
  maintenance: String!
  hosts: [VsphereHost!]!
  vms: [VsphereVM!]!
}

type Network {
  id: ID!
  variant: String!
  name: String!
  provider: ID!
  parent: VsphereFolder!
  tag: String!
  vms: [VsphereVM!]!
}

type DvPortGroup {
  id: ID!
  variant: String!
  name: String!
  provider: ID!
  parent: VsphereFolder!
  dvSwitch: ID!
  ports: [String!]!
  vms: [VsphereVM!]!
}

type DvSwitch {
  id: ID!
  variant: String!
  name: String!
  provider: ID!
  parent: VsphereFolder!
  portgroups: [DvPortGroup!]!
  host: [DvSHost]! 
}

type DvSHost {
	host: String!
	PNIC: [String!]!
}

type ConfigNetwork {
  vNICs: [VNIC]!
  pNICs: [PNIC]!
  portGroups: [PortGroup]!
  vSwitches: [VSwitch]!
}

type PortGroup {
  key: String!
  name: String!
  vswitch: ID!
}

type VSwitch {
  key: String!
  name: String!
  portGroups: [String!]!
  pNICs: [String!]!
}

type PNIC {
  key: String!
  linkSpeed: Int!
}

type VNIC {
  key: String!
  portGroup: String!
  dPortGroup: String!
  ipAddress: String!
  mtu: Int!
}

type NetworkAdapter {
  name: String!
  ipAddress: String!
  linkSpeed: Int!
  mtu: Int!
}

type VsphereVM {
  id: ID!
  provider: ID!
  name: String!
  path: String!
  revision: Int!
  revisionValidated: Int!
  uuid: String!
  firmware: String!
  ipAddress: String!
  powerState: String!
  cpuAffinity: [Int!]!
  cpuHotAddEnabled: Boolean!
  cpuHotRemoveEnabled: Boolean!
  memoryHotAddEnabled: Boolean!
  faultToleranceEnabled: Boolean!
  cpuCount: Int!
  coresPerSocket: Int!
  memoryMB: Int!
  guestName: String!
  balloonedMemory: Int!
  numaNodeAffinity: [String!]
  storageUsed: Int!
  snapshot: Int!
  isTemplate: Boolean! 
  hostID: ID!
  host: VsphereHost!
  devices: [Device]
  disks: [Disk!]!
  netIDs: [ID!]!
  networks: [NetworkGroup!]!
  concerns: [Concern!]!
}

type Device {
  Kind: String!
}

type Disk {
  key: Int!
  file: String!
  datastore: String!
  capacity: Int!
  shared: Boolean!
  rdm: Boolean!
}

type Concern {
  label: String!
  category: String!
  assessment: String!
}  

input VMFilter {
  cpuHotAddEnabled: Boolean
  ipAddress: String
  powerState: String
  memoryMB: Int
}

type Query {
  providers: [Provider!]!
  provider(id: ID!): Provider!
  vspherefolders(provider: ID): [VsphereFolder!]!
  vspherefolder(id: ID!, provider: ID!): VsphereFolder!
  vsphereDatacenters(provider: ID): [VsphereDatacenter!]!
  vsphereDatacenter(id: ID!, provider: ID!): VsphereDatacenter!
  vsphereClusters(provider: ID): [VsphereCluster!]!
  vsphereCluster(id: ID!, provider: ID!): VsphereCluster!
  vsphereHosts(provider: ID): [VsphereHost!]!
  vsphereHost(id: ID!, provider: ID!): VsphereHost!
  vsphereDatastores(provider: ID): [VsphereDatastore!]!
  vsphereDatastore(id: ID!, provider: ID!): VsphereDatastore!
  vsphereNetworks(provider: ID): [NetworkGroup!]!
  vsphereNetwork(id: ID!, provider: ID!): NetworkGroup!
  vsphereVMs(provider: ID, filter: VMFilter): [VsphereVM!]!
  vsphereVM(id: ID!, provider: ID!): VsphereVM!
}

